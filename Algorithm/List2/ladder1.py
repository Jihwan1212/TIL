# [문제]
# 점심 시간에 산책을 다니는 사원들은 최근 날씨가 더워져, 사다리 게임을 통하여 누가 아이스크림을 구입할지 결정하기로 한다.
#
# 김 대리는 사다리타기에 참여하지 않는 대신 사다리를 그리기로 하였다.
#
# 사다리를 다 그리고 보니 김 대리는 어느 사다리를 고르면 X표시에 도착하게 되는지 궁금해졌다. 이를 구해보자.
#
# 아래 <그림 1>의 예를 살펴보면, 출발점 x=0 및 x=9인 세로 방향의 두 막대 사이에 임의의 개수의 막대들이 랜덤 간격으로 추가되고(이 예에서는 2개가 추가됨) 이 막대들 사이에 가로 방향의 선들이 또한 랜덤하게 연결된다.
#
# X=0인 출발점에서 출발하는 사례에 대해서 화살표로 표시한 바와 같이, 아래 방향으로 진행하면서 좌우 방향으로 이동 가능한 통로가 나타나면 방향 전환을 하게 된다.
#
# 방향 전환 이후엔 다시 아래 방향으로만 이동하게 되며, 바닥에 도착하면 멈추게 된다.
#
# 문제의 X표시에 도착하려면 X=4인 출발점에서 출발해야 하므로 답은 4가 된다. 해당 경로는 별도로 표시하였다.
# 아래 <그림 2>와 같은 100 x 100 크기의 2차원 배열로 주어진 사다리에 대해서, 지정된 도착점에 대응되는 출발점 X를 반환하는 코드를 작성하라 (‘0’으로 채워진 평면상에 사다리는 연속된 ‘1’로 표현된다. 도착 지점은 '2'로 표현된다).
# [제약 사항]
#
# 한 막대에서 출발한 가로선이 다른 막대를 가로질러서 연속하여 이어지는 경우는 없다.
#
# [입력]
#
# 입력 파일의 첫 번째 줄에는 테스트 케이스의 번호가 주어지며, 바로 다음 줄에 테스트 케이스가 주어진다.
#
# 총 10개의 테스트 케이스가 주어진다.
#
# [출력]
#
# #부호와 함께 테스트 케이스의 번호를 출력하고, 공백 문자 후 도착하게 되는 출발점의 x좌표를 출력한다.



def find_starting_x(ladder):
    """
    사다리 게임에서 도착점(2)에서 출발하여 위로 올라가면서 출발점을 찾는 함수
    """
    N = len(ladder)  # 100 x 100 크기의 사다리
    target_x = -1  # 도착점의 x 좌표

    # 도착점(2) 찾기 (사다리의 마지막 행에서 탐색)
    for x in range(100):
        if ladder[99][x] == 2:
            target_x = x
            break

    # 아래에서 위로 탐색 시작
    y = 99  # 도착점의 y 좌표 (맨 아래 행)
    x = target_x  # 도착점의 x 좌표

    while y > 0:  # 최상단(y=0)까지 이동할 때까지 반복
        # 좌측에 1이 있으면 왼쪽으로 이동
        if x > 0 and ladder[y][x - 1] == 1:
            while x > 0 and ladder[y][x - 1] == 1:  # 이동할 수 있을 때까지 왼쪽으로 이동
                x -= 1
            y -= 1  # 이동 후 위로 이동

        # 우측에 1이 있으면 오른쪽으로 이동
        elif x < 99 and ladder[y][x + 1] == 1:
            while x < 99 and ladder[y][x + 1] == 1:  # 이동할 수 있을 때까지 오른쪽으로 이동
                x += 1
            y -= 1  # 이동 후 위로 이동

        # 좌우 이동이 불가능하면 바로 위로 이동
        else:
            y -= 1

    return x  # 최상단(y=0)에서의 x 좌표 반환


# 테스트 실행 (입력 데이터를 2차원 리스트로 받아야 함)
def main():
    """
    10개의 테스트 케이스를 입력받아 처리하는 메인 함수
    """
    for _ in range(10):  # 총 10개의 테스트 케이스 처리
        tc = int(input())  # 테스트 케이스 번호 입력
        ladder = [list(map(int, input().split())) for _ in range(100)]  # 100x100 사다리 입력
        result = find_starting_x(ladder)  # 출발점 x 좌표 찾기
        print(f"#{tc} {result}")  # 결과 출력


if __name__ == "__main__":
    main()  # 프로그램 실행
